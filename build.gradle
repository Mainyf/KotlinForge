import io.github.mainyf.bundle.BundlePlugin
import io.github.mainyf.bundle.BundlePluginExtension
import org.apache.tools.ant.filters.ReplaceTokens

buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
        classpath 'org.jetbrains.kotlin:kotlin-gradle-plugin:1.0.5-2'
        classpath 'org.jetbrains:annotations:13.0'
    }
}

apply plugin: 'forge'
apply plugin: 'kotlin'
apply plugin: BundlePlugin

def bundleInfo = project.extensions.getByName("bundle") as BundlePluginExtension

def resourceDir = "src/main/resources"
def modId = bundleInfo.modName.replace(" ", "").toLowerCase()
def atFilePath = "${resourceDir}/${modId}_at.cfg"

version = bundleInfo.version
group = bundleInfo.group
archivesBaseName = bundleInfo.getModId()

tasks.withType(Jar) {
    compileJava.options.encoding = bundleInfo.encoding
    compileJava.options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
}

sourceCompatibility = targetCompatibility = bundleInfo.javaVersuon
compileJava {
    sourceCompatibility = targetCompatibility = bundleInfo.javaVersuon
}

task preprocessProperties(type: Copy) {
    from bundleInfo.kotlinSrcDirs
    into 'build/sourceTmp/kotlin'
    filter(ReplaceTokens, tokens: getVariable())
    println "preprocessProperties"
}

compileKotlin {
    dependsOn preprocessProperties
    source = preprocessProperties.destinationDir
    destinationDir = file('build/adjustedClasses')
}

minecraft {
    version = "1.7.10-10.13.4.1558-1.7.10"
    runDir = "eclipse"
    mappings = "snapshot_20140925"
}

configurations {
    embed
    compile.extendsFrom(embed)
}

dependencies {
    compile 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
    embed 'org.jetbrains.kotlin:kotlin-stdlib-jdk8:+'
    compile 'org.jetbrains.kotlin:kotlin-gradle-plugin:1.0.5-2'
}

jar {
    if (project.file(atFilePath).exists()) {
        println("access transform exists, include to manifest file.")
        manifest {
            attributes 'FMLAT': atFilePath
        }
    }
    from configurations.embed.collect { it.isDirectory() ? it : zipTree(it) }
}


sourceSets {
//    main.kotlin.srcDirs = [bundleInfo.kotlinSrcDirs]
    main.kotlin.srcDirs = []
//    main.java.srcDirs = [bundleInfo.javaSrcDirs]
    main.java.srcDirs = []
}

processResources {
    inputs.property "version", bundleInfo.version
    inputs.property "mcversion", project.minecraft.version

    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
        expand getVariable()
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

Map<String, Object> getVariable() {
    def bundleInfo = project.extensions.getByName("bundle") as BundlePluginExtension
    return [
            'version'    : bundleInfo.version,
            'mcversion'  : project.minecraft.version,
            'author'     : bundleInfo.getAuthor(),
            'description': bundleInfo.description,
            'modid'      : bundleInfo.getModId(),
            'name'       : bundleInfo.modName
    ]
}
